import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{ah as i,aj as o,ak as t,an as a,am as n,ai as p}from"./app-CcT1RBrl.js";const d={};function c(m,e){const r=n("Mermaid");return p(),i("div",null,[e[0]||(e[0]=o('<div class="hint-container tip"><p class="hint-container-title">前言</p><p>最近两个月又玩起了 postcrossing，想着能否抓取网站数据，形成+整合自己的展示墙、地图、统计表、明信片故事，并在博客中显示。</p></div><h2 id="成果展示-←-点击查看" tabindex="-1"><a class="header-anchor" href="#成果展示-←-点击查看"><span><a href="/Arthur/postcrossing/%E4%BF%A1%E6%81%AF%E6%B1%87%E6%80%BB">成果展示（← 点击查看）</a></span></a></h2><p>新增：<a href="https://pcrecap.fengsy.cn/static/index.html" target="_blank" rel="noopener noreferrer">在线导出数据</a></p><div class="hint-container important"><p class="hint-container-title">说明</p><p>以上在线导出网站的前端，是通过 python 的 flask 库实现，整个服务是通过宝塔面板的 <code>网站——Python项目</code> 进行管理。</p></div><div class="hint-container info"><p class="hint-container-title">特点总结</p><p>项目地址：<a href="https://github.com/arthurfsy2/Postcrossing_map_generator" target="_blank" rel="noopener noreferrer">https://github.com/arthurfsy2/Postcrossing_map_generator</a></p><ol><li><p>展示墙<br> 抓取官网的<code>/gallery</code>下的 4 个模块，下载 gallery 对应的图片，并生成包含 fronttage <a href="http://xn--hxy.md" target="_blank" rel="noopener noreferrer">的.md</a> 文件，以便你放入到<strong>vuepress</strong>当中使用</p></li><li><p>地图<br> 参考官网的<code>/map</code>的样式，通过 ClusterMap、Map 这 2 个地图分别展示了聚合效果、散点展示效果，且每个地图都通过 Geojson 来标记收发国家的“足迹”。</p></li><li><p><strong>信息汇总</strong>：</p><p>汇总以下模块的内容</p><ul><li><p>图片墙：统计个人收发数据、对应 4 个展示墙的超链接<br><img src="https://raw.gitmirror.com/arthurfsy2/Postcrossing_map_generator/5ee036db3ed9ed63cfebdd16907ef6b4d3f6780a/img/summary01.png" alt="" loading="lazy"></p></li><li><p>地图展示：集成<code>map.html、clusterMap.html</code>这 2 个地图的内容</p><figure><img src="https://raw.gitmirror.com/arthurfsy2/Postcrossing_map_generator/5ee036db3ed9ed63cfebdd16907ef6b4d3f6780a/img/summary02.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>统计</p><p>​ 抓取官网的<code>/stats</code>下的 3 个模块，分别展示<code>收发记录（年、月）</code>、<code>国家分布（饼图）</code>、<code>各国明信片（表格）</code>、<code>还在漂泊的明信片（表格）</code></p><blockquote><p>图形是通过 echarts 插件显示，表格是通过 markdown 的表格实现。）</p></blockquote><figure><img src="https://raw.gitmirror.com/arthurfsy2/Postcrossing_map_generator/5ee036db3ed9ed63cfebdd16907ef6b4d3f6780a/img/summary03-1.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://raw.gitmirror.com/arthurfsy2/Postcrossing_map_generator/5ee036db3ed9ed63cfebdd16907ef6b4d3f6780a/img/summary03-2.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>明信片故事：读取人工填写的<code>./temnplate/postcardStory</code>生成明信片故事的<strong>词云</strong>，并为每个已填写“故事”的明信片展示图片、内容</p><figure><img src="https://raw.gitmirror.com/arthurfsy2/Postcrossing_map_generator/5ee036db3ed9ed63cfebdd16907ef6b4d3f6780a/img/summary04-1.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://raw.gitmirror.com/arthurfsy2/Postcrossing_map_generator/5ee036db3ed9ed63cfebdd16907ef6b4d3f6780a/img/summary04-2.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>被注册时收到的回复</p><p>​ 当你寄出的邮件被登记后，可定时抓取你账号 postcrossing 账号关联邮箱的<strong>回复邮件内容</strong>（&quot;Hurray! Your postcard CN-XXX to XXXX&quot;的邮件）</p><figure><img src="https://raw.gitmirror.com/arthurfsy2/Postcrossing_map_generator/5ee036db3ed9ed63cfebdd16907ef6b4d3f6780a/img/summary05.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>增量更新</p><p>​ 抓取后的信息会保存到./template/data/db 数据库当中，如果以后有更新，只会抓取更新部分并存入到数据库，减少对 Postcrossing 的压力。</p></li></ul></li></ol></div><h2 id="方法思路" tabindex="-1"><a class="header-anchor" href="#方法思路"><span>方法思路</span></a></h2><p>总体而言，通过 <code>createGallery.py</code> 生成展示墙、通过 <code>createMap.py</code> 生成地图，最后通过 <code>createPersonalPage.py</code> 替换模板的内容，形成博客的<code>信息汇总.md</code>。</p><div class="hint-container note"><p class="hint-container-title">Cookie 有效性</p><p>本项目的登陆原理是通过 python 的 mechanize 库进行模拟登录，成功登录后会自动保存 Cookies，因此可以放到 Github Action 中进行定期检查更新。</p></div><h3 id="整体思路" tabindex="-1"><a class="header-anchor" href="#整体思路"><span>整体思路</span></a></h3>',9)),t(r,{id:"mermaid-119",code:"eJzT1dXlKsksyUm14gIx03Lyy5MzEotKFEJcuIpLk9KLEgsyFIpLgCIhicXZegWVXMlFqYklqe6JOTmpRZVAAV3dJ/vnPl0742nHhhcLV0DFM/PS8nV17SBqfRMLMNQBxVDUBKQWFefnJeYEJKangmxJzUvh4spMMYzOyU/PzAOKxNro6j6fMv9ZxwT9Z4sbns1f6pyfn52ZCjQgJbEkUS8liQvZlUDFcPHMFJPo3MTMnJCixGSQHMikp4vmvWzvhzjocUPj8/27X6yf+HT2vKdLep+2tT5dtxNJPxcA6gt9GQ=="}),e[1]||(e[1]=a("h3",{id:"各模块",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#各模块"},[a("span",null,"各模块")])],-1)),t(r,{id:"mermaid-123",code:"eJzT1dXlKsksyUm1UsjJT8/M0yuo5AKJpeXklydnJBaVKIS4cD1dN+vZnPnPZ+5+uneqrq5dZoqhnmG0c35+dmZq8dMlG59N7Xi/p+Nle++zaRuAil7ObHu/pzMWmy4jmK5nczohul5s3/xifztYPQAmPUXz"}),t(r,{id:"mermaid-124",code:"eJzT1dXlKsksyUm1UkguSk0sSXVPzMlJLarUK6jkAsml5eSXJ2ckFpUohLhwPVvc8Gz+0udT5j/rmPB049TnS3Y9XTTzWWfDyzkNz6ZueNa7Tlf3yf65T9fOeD57x9PWzRCxpx0bUhJLEvVSknR17V70bX/aP+3p9k1QdbNans7e97yzHabdDmK4yZMdq+AWABXlJhZlp+SX50GUcQEA7i1lQg=="}),t(r,{id:"mermaid-125",code:"eJzT1dXl4irJLMlJtVJILkpNLEn1TSzQK6jkAkmk5eSXJ2ckFpUohLhwPVvc8Gz+0udT5j/rmPB0zoans/c962x4Oafh2dQNz3rX6eo+2T/36doZz2fveNq6GSL2tGNDSmJJol5Kkq6u3Yu+7U/7pz3dvgmqblYL1BCodjuIyUZPdqyCSGSU5OY8m9b+ZPc2LgDR4lvp"}),t(r,{id:"mermaid-126",code:"eJzT1dXl4irJLMlJtVJILkpNLEkNSC0qzs9LzAlITE/VK6jkAqlIy8kvT85ILCpRCHHhetG3/Wn/tKfbNz3ZP/fp2hnPZ7U8m7rhWe86XV27Z7P3P+tdVJKaW5ADNOnZioXP5u4HCmemGEY/nzL/WceEZ3Mank7oA2p51DDnyf6FzxrXP9vY/qxh96OGuXq5KbFcACB4SJQ="}),t(r,{id:"mermaid-127",code:"eJzT1dXlKsksyUm1UshNzMwJKUpMztYrqOQCiafl5JcnZyQWlSiEuHC96Nv+tH/a0+2bns6e93RJ78umdU92b9PVfb529suGTu3n+3e/WD9RV9fu6fo9T1uXpiSWJOqlJHEBAG4yLMk="}),e[2]||(e[2]=o('<h2 id="参考代码" tabindex="-1"><a class="header-anchor" href="#参考代码"><span>参考代码</span></a></h2><h3 id="postcrossing-信息汇总页" tabindex="-1"><a class="header-anchor" href="#postcrossing-信息汇总页"><span>postcrossing 信息汇总页</span></a></h3><p><a href="https://github.com/arthurfsy2/Postcrossing_map_generator" target="_blank" rel="noopener noreferrer">参考代码</a></p>',3))])}const f=s(d,[["render",c]]),h=JSON.parse(`{"path":"/%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/IT%E6%80%BB%E7%BB%93/vuepress/%E6%8A%93%E5%8F%96postcrossing%E6%95%B0%E6%8D%AE%E5%B9%B6%E5%9C%A8vuepress%E4%B8%8A%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87%E3%80%81%E5%9C%B0%E5%9B%BE.html","title":"抓取postcrossing数据并在vuepress上显示图片、地图","lang":"zh-CN","frontmatter":{"icon":"edit","title":"抓取postcrossing数据并在vuepress上显示图片、地图","date":"2023-11-13T00:00:00.000Z","category":["经验总结"],"tag":["IT总结","vuepress"],"description":"前言 最近两个月又玩起了 postcrossing，想着能否抓取网站数据，形成+整合自己的展示墙、地图、统计表、明信片故事，并在博客中显示。 成果展示（← 点击查看） 新增：在线导出数据 说明 以上在线导出网站的前端，是通过 python 的 flask 库实现，整个服务是通过宝塔面板的 网站——Python项目 进行管理。 特点总结 项目地址：htt...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"抓取postcrossing数据并在vuepress上显示图片、地图\\",\\"image\\":[\\"https://raw.gitmirror.com/arthurfsy2/Postcrossing_map_generator/5ee036db3ed9ed63cfebdd16907ef6b4d3f6780a/img/summary01.png\\",\\"https://raw.gitmirror.com/arthurfsy2/Postcrossing_map_generator/5ee036db3ed9ed63cfebdd16907ef6b4d3f6780a/img/summary02.png\\",\\"https://raw.gitmirror.com/arthurfsy2/Postcrossing_map_generator/5ee036db3ed9ed63cfebdd16907ef6b4d3f6780a/img/summary03-1.png\\",\\"https://raw.gitmirror.com/arthurfsy2/Postcrossing_map_generator/5ee036db3ed9ed63cfebdd16907ef6b4d3f6780a/img/summary03-2.png\\",\\"https://raw.gitmirror.com/arthurfsy2/Postcrossing_map_generator/5ee036db3ed9ed63cfebdd16907ef6b4d3f6780a/img/summary04-1.png\\",\\"https://raw.gitmirror.com/arthurfsy2/Postcrossing_map_generator/5ee036db3ed9ed63cfebdd16907ef6b4d3f6780a/img/summary04-2.png\\",\\"https://raw.gitmirror.com/arthurfsy2/Postcrossing_map_generator/5ee036db3ed9ed63cfebdd16907ef6b4d3f6780a/img/summary05.png\\"],\\"datePublished\\":\\"2023-11-13T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-24T03:03:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Arthur\\",\\"url\\":\\"https://blog.4a1801.life\\"}]}"],["meta",{"property":"og:url","content":"https://blog.4a1801.life/%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/IT%E6%80%BB%E7%BB%93/vuepress/%E6%8A%93%E5%8F%96postcrossing%E6%95%B0%E6%8D%AE%E5%B9%B6%E5%9C%A8vuepress%E4%B8%8A%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87%E3%80%81%E5%9C%B0%E5%9B%BE.html"}],["meta",{"property":"og:site_name","content":"Family's Life"}],["meta",{"property":"og:title","content":"抓取postcrossing数据并在vuepress上显示图片、地图"}],["meta",{"property":"og:description","content":"前言 最近两个月又玩起了 postcrossing，想着能否抓取网站数据，形成+整合自己的展示墙、地图、统计表、明信片故事，并在博客中显示。 成果展示（← 点击查看） 新增：在线导出数据 说明 以上在线导出网站的前端，是通过 python 的 flask 库实现，整个服务是通过宝塔面板的 网站——Python项目 进行管理。 特点总结 项目地址：htt..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.gitmirror.com/arthurfsy2/Postcrossing_map_generator/5ee036db3ed9ed63cfebdd16907ef6b4d3f6780a/img/summary01.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-24T03:03:35.000Z"}],["meta",{"property":"article:tag","content":"vuepress"}],["meta",{"property":"article:tag","content":"IT总结"}],["meta",{"property":"article:published_time","content":"2023-11-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-24T03:03:35.000Z"}]]},"git":{"createdTime":1699944794000,"updatedTime":1729739015000,"contributors":[{"name":"arthurfsy2","username":"arthurfsy2","email":"fsyflh@gmail.com","commits":7,"url":"https://github.com/arthurfsy2"}]},"readingTime":{"minutes":2.9,"words":869},"filePathRelative":"经验总结/IT总结/vuepress/抓取postcrossing数据并在vuepress上显示图片、地图.md","localizedDate":"2023年11月13日","excerpt":"<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">前言</p>\\n<p>最近两个月又玩起了 postcrossing，想着能否抓取网站数据，形成+整合自己的展示墙、地图、统计表、明信片故事，并在博客中显示。</p>\\n</div>\\n<h2><a class=\\"header-anchor\\" href=\\"#成果展示-←-点击查看\\"><span></span></a><a href=\\"/Arthur/postcrossing/%E4%BF%A1%E6%81%AF%E6%B1%87%E6%80%BB\\">成果展示（← 点击查看）</a></h2>","autoDesc":true}`);export{f as comp,h as data};
