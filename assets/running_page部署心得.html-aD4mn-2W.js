import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{ah as a,aj as p,an as t,ao as o,ak as i,al as s,am as c,ai as g}from"./app-W7HCLj5Y.js";const l={},d={class:"footnotes"},u={class:"footnotes-list"},h={id:"footnote1",class:"footnote-item"};function f(b,e){const r=c("RouteLink");return g(),a("div",null,[e[6]||(e[6]=p('<h1 id="running-page部署心得" tabindex="-1"><a class="header-anchor" href="#running-page部署心得"><span>running_page部署心得</span></a></h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>Running page这个项目，是我接触的第一个“较深入”（相对编程小白的我来说）的项目。</p><p>一开始，是为了找到导出咕咚运动数据，一直找不到导出的方法。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p><p>后来偶尔看到有人推荐这个项目，不仅可以支持数据导出，还支持了数据的图形化展示。</p><p>对于喜欢跑步的我（最近沉迷Blog就没怎么跑了）来说，是一个很棒的项目。</p><ul><li><p>项目地址：<a href="https://github.com/yihong0618/running_page" target="_blank" rel="noopener noreferrer">yihong0618/running_page</a></p></li><li><p>支持多运动类型的fork：<a href="https://github.com/ben-29/workouts_page" target="_blank" rel="noopener noreferrer">ben-29/workouts_page</a></p></li></ul><blockquote><p>Ben的fork更适用于喜欢多个活动项目的情况</p></blockquote><ul><li>我的fork：<a href="https://github.com/arthurfsy2/workouts_page_fsy" target="_blank" rel="noopener noreferrer">arthurfsy2/workouts_page_fsy</a></li></ul><h2 id="vercel部署" tabindex="-1"><a class="header-anchor" href="#vercel部署"><span>Vercel部署</span></a></h2><p>一开始是在Vercel上部署的，部署用的是支持ben的fork。主要参考了这篇文章：<a href="https://blog.kobin.cn/blog/program/p3/2396.html" target="_blank" rel="noopener noreferrer">使用 GitHub Pages 部署 Running Page 个人跑步主页 - KOBIN 技术随笔</a></p><p>部署完后，通过Github Action定时采集数据，在Github上稳定运行了几个月的时间。后来群晖、云服务器经历了卡顿需要重装的事情（其实也和Github没啥关系），萌生了“要牢牢把数据抓在手里”的想法，就尝试本地部署项目。</p><blockquote><p>后面发现docker部署会导致很多冗余的容器产生，因此又换回部署到 <code>vercel</code>上。以下步骤仅供了解docker部署方式。</p></blockquote><h2 id="群晖docker部署-2023-8-9" tabindex="-1"><a class="header-anchor" href="#群晖docker部署-2023-8-9"><span>群晖Docker部署(2023/8/9)</span></a></h2><p>估计是因为这个方法太过冷门，查询issue也没有啥完整的步骤，因此自己捣腾了很久终于成功了，还在<a href="https://github.com/yihong0618/running_page/issues/181#issuecomment-1671016002" target="_blank" rel="noopener noreferrer">相关的issue</a>上回复了</p><h3 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤"><span>步骤</span></a></h3><p>今天成功在群晖上部署了，<s>链接：<a href="http://ddns.4a1801.life:8088/" target="_blank" rel="noopener noreferrer">这里</a></s>。但是部署有一些坑需要注意，我说一下我的步骤：<br> 1、SSH群晖后，查询python的版本需要满足yihong在首页的要求(node &gt;= 14.15.0 python &gt;= 3.7)，因此需要安装python3、Nodejs、GIT server套件。我是安装了spk7的python3.11，因此安装完套件后SSH运行：<br><code>ln -s /volume1/@appstore/python311/bin/pip3 /usr/bin/pip3</code> --这样可以设置群晖命令行下默认的python版本<br><code>ln -s /volume1/@appstore/python311/bin/python3 /usr/bin/python3</code><br> 最后，命令行输入 <code>python3 --version</code>、<code>pip3 --version</code>、<code>git -v</code>、<code>node -v</code>命令，看对应的环境是否都按照好了<br><a href="https://user-images.githubusercontent.com/129527972/259370561-c1567ab4-9eea-4f61-9d49-cff2d14fa88f.png" target="_blank" rel="noopener noreferrer"><img src="https://user-images.githubusercontent.com/129527972/259370561-c1567ab4-9eea-4f61-9d49-cff2d14fa88f.png" alt="image" loading="lazy"></a></p><p>2、<br> 1）打开你需要存储的目录，比如 <code>cd /volume1/docker</code><br> 2）然后 <code>git clone https://github.com/yihong0618/running_page.git</code>下载到该目录<br> 3）接着按照yihong的说明，修改 <code>gatsby-config.js</code>对应的内容。<br> （我下载的库的是 <code>https://github.com/ben-29/workouts_page.git</code>，但是操作流程都一样）<br> 3、<br> 1）<code>cd /volume1/docker/running_page</code>--进入项目目录<br> 2）打开 <code>依赖文件requirements.txt</code>中，其中的 <code>git+https://github.com/alenrajsp/tcxreader.git</code>改成 <code>git+https://ghproxy.com/https://github.com/alenrajsp/tcxreader.git</code>才能正常访问，@ben-29 ，如果是ben的版本，requirements.txt还需删除以下多余的（不过也我只遇到了pycrypto无法正常下载的问题）<br><code>bs4 pycrypto html.parser aiofiles</code><br><a href="https://user-images.githubusercontent.com/129527972/259371179-0ab984a6-5012-4294-bc56-503104b76cc3.png" target="_blank" rel="noopener noreferrer"><img src="https://user-images.githubusercontent.com/129527972/259371179-0ab984a6-5012-4294-bc56-503104b76cc3.png" alt="image" loading="lazy"></a></p><p>4、如果提示类似无法连接 <code>http://deb.debian.org/</code>之类的，可以尝试把路由器的DNS改为 <code>8.8.8.8</code>或者 <code>114.114.114.114</code>试一下。<br> 5、运行 <code>docker build -t running_page:latest . --build-arg app=Garmin-CN --build-arg email=&quot;2XXXX.com&quot; --build-arg password=&quot;XXXXX&quot;</code><br> 6、经过上面的步骤，终于艰难地把镜像给搞定了，然后最后启动容器：<br><code>docker run -itd --restart=always --name workout_page -p 8088:80 running_page:latest</code> 这样可以把端口映射到8088（可更改）<br> 7、如果有公网IP，搭配ddns-go即可实现外网访问<br> 8、可以考虑搭配群晖的定时任务，定期跑 <code>docker build -t running_page:latest . --build-arg app=Garmin-CN --build-arg email=&quot;2XXXX.com&quot; --build-arg password=&quot;XXXXX&quot;</code>，这个我后面再试试</p><h2 id="页面美化" tabindex="-1"><a class="header-anchor" href="#页面美化"><span>页面美化</span></a></h2><ul><li><p>字体更换教程(2024/12/11更新)：参考了<a href="https://mfydev.github.io/Running-Page-Wiki/zh/FAQ/change-font/" target="_blank" rel="noopener noreferrer">如何更改字体？</a>这篇文章后，将字体更换为MGI-font</p></li><li><p>整体页面美化(2025/03/25更新)：根据几个fork的仓库，设计了一版浅色主题，详见：<a href="https://fsy.4a1801.life/" target="_blank" rel="noopener noreferrer">Arthur feng 锻炼记录</a></p></li></ul><hr class="footnotes-sep">',22)),t("section",d,[t("ol",u,[t("li",h,[t("p",null,[e[1]||(e[1]=o("咕咚承载着我体重暴瘦的时候骑单车的记录，也是一段很值得怀念的回忆了。详见：")),i(r,{to:"/Arthur/Qzone/%E8%AF%B4%E8%AF%B4.html#_8%E6%9C%88-1"},{default:s(()=>e[0]||(e[0]=[o("2014/8/22购买单车设备、骑行10.31km")])),_:1}),e[2]||(e[2]=o("、")),e[3]||(e[3]=t("a",{href:"https://blog.4a1801.life/Arthur/Qzone/%E8%AF%B4%E8%AF%B4.html#_2%E6%9C%88",target:"_blank",rel:"noopener noreferrer"},"2015/2/15单车被偷",-1)),e[4]||(e[4]=o(" 后来导出咕咚骑行记录的GPX后，就导入到了Garmin Connect当中了。 ")),e[5]||(e[5]=t("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1))])])])])])}const _=n(l,[["render",f]]),k=JSON.parse(`{"path":"/%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/IT%E6%80%BB%E7%BB%93/others/running_page%E9%83%A8%E7%BD%B2%E5%BF%83%E5%BE%97.html","title":"running_page部署心得","lang":"zh-CN","frontmatter":{"icon":"edit","date":"2023-09-05T00:00:00.000Z","category":["经验总结"],"tag":["IT总结"],"order":5,"description":"running_page部署心得 前言 Running page这个项目，是我接触的第一个“较深入”（相对编程小白的我来说）的项目。 一开始，是为了找到导出咕咚运动数据，一直找不到导出的方法。[1] 后来偶尔看到有人推荐这个项目，不仅可以支持数据导出，还支持了数据的图形化展示。 对于喜欢跑步的我（最近沉迷Blog就没怎么跑了）来说，是一个很棒的项目。 ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"running_page部署心得\\",\\"image\\":[\\"https://user-images.githubusercontent.com/129527972/259370561-c1567ab4-9eea-4f61-9d49-cff2d14fa88f.png\\",\\"https://user-images.githubusercontent.com/129527972/259371179-0ab984a6-5012-4294-bc56-503104b76cc3.png\\"],\\"datePublished\\":\\"2023-09-05T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-25T06:44:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Arthur\\",\\"url\\":\\"https://blog.4a1801.life\\"}]}"],["meta",{"property":"og:url","content":"https://blog.4a1801.life/%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/IT%E6%80%BB%E7%BB%93/others/running_page%E9%83%A8%E7%BD%B2%E5%BF%83%E5%BE%97.html"}],["meta",{"property":"og:site_name","content":"Family's Life"}],["meta",{"property":"og:title","content":"running_page部署心得"}],["meta",{"property":"og:description","content":"running_page部署心得 前言 Running page这个项目，是我接触的第一个“较深入”（相对编程小白的我来说）的项目。 一开始，是为了找到导出咕咚运动数据，一直找不到导出的方法。[1] 后来偶尔看到有人推荐这个项目，不仅可以支持数据导出，还支持了数据的图形化展示。 对于喜欢跑步的我（最近沉迷Blog就没怎么跑了）来说，是一个很棒的项目。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://user-images.githubusercontent.com/129527972/259370561-c1567ab4-9eea-4f61-9d49-cff2d14fa88f.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-25T06:44:17.000Z"}],["meta",{"property":"article:tag","content":"IT总结"}],["meta",{"property":"article:published_time","content":"2023-09-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-25T06:44:17.000Z"}]]},"git":{"createdTime":1693926071000,"updatedTime":1742885057000,"contributors":[{"name":"arthurfsy2","username":"arthurfsy2","email":"fsyflh@gmail.com","commits":8,"url":"https://github.com/arthurfsy2"}]},"readingTime":{"minutes":3.67,"words":1100},"filePathRelative":"经验总结/IT总结/others/running_page部署心得.md","localizedDate":"2023年9月5日","excerpt":"\\n<h2>前言</h2>\\n<p>Running page这个项目，是我接触的第一个“较深入”（相对编程小白的我来说）的项目。</p>\\n<p>一开始，是为了找到导出咕咚运动数据，一直找不到导出的方法。<sup class=\\"footnote-ref\\"><a href=\\"#footnote1\\">[1]</a><a class=\\"footnote-anchor\\" id=\\"footnote-ref1\\"></a></sup></p>\\n<p>后来偶尔看到有人推荐这个项目，不仅可以支持数据导出，还支持了数据的图形化展示。</p>\\n<p>对于喜欢跑步的我（最近沉迷Blog就没怎么跑了）来说，是一个很棒的项目。</p>","autoDesc":true}`);export{_ as comp,k as data};
